name: LightwatchAI Build & Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.3'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          dir: '${{ github.workspace }}/qt/'
          modules: 'qtbase'

      - name: Configure CMake
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A x64 -DENABLE_GUI=ON -DCMAKE_PREFIX_PATH="${{ github.workspace }}/qt/Qt/6.5.3/msvc2019_64"

      - name: Build binaries
        shell: cmd
        run: |
          cd build
          cmake --build . --config Release

      - name: Validate executables
        shell: cmd
        run: |
          cd build\bin
          if not exist lightwatch_cli.exe exit 1
          if not exist lightwatch_run.exe exit 1
          if not exist lightwatch_train.exe exit 1
          if not exist dummy_checkpoint.bin fsutil file createnew dummy_checkpoint.bin 3412992
          lightwatch_cli.exe dummy_checkpoint.bin --len 1 || exit /b 0
          REM GUI is optional - check if it exists and warn if not
          if exist lightwatch_gui.exe (
            echo GUI executable found
          ) else (
            echo Warning: GUI executable not found - this is expected if Qt is not available
          )

      - name: Delete existing release
        shell: cmd
        run: |
          curl -X DELETE -H "Authorization: token %GITHUB_TOKEN%" https://api.github.com/repos/%GITHUB_REPOSITORY%/releases/tags/%GITHUB_REF_NAME%
        continue-on-error: true

      - name: Create Release
        shell: cmd
        run: |
          cd build\bin
          set "FILES="
          if exist lightwatch_gui.exe set "FILES=%FILES% build/bin/lightwatch_gui.exe"
          if exist lightwatch_cli.exe set "FILES=%FILES% build/bin/lightwatch_cli.exe"
          if exist lightwatch_run.exe set "FILES=%FILES% build/bin/lightwatch_run.exe"
          if exist lightwatch_train.exe set "FILES=%FILES% build/bin/lightwatch_train.exe"
          if exist data_preprocess.exe set "FILES=%FILES% build/bin/data_preprocess.exe"
          if exist simple_cuda_test.exe set "FILES=%FILES% build/bin/simple_cuda_test.exe"

          echo Files to upload: %FILES%

          curl -X POST -H "Authorization: token %GITHUB_TOKEN%" ^
            -H "Content-Type: application/json" ^
            https://api.github.com/repos/%GITHUB_REPOSITORY%/releases ^
            -d "{\"tag_name\":\"%GITHUB_REF_NAME%\",\"name\":\"%GITHUB_REF_NAME%\",\"body\":\"Automated release of LightwatchAI binaries for Windows.\",\"draft\":false,\"prerelease\":false}" ^
            > release.json

          for %%f in (%FILES%) do (
            echo Uploading %%f
            curl -X POST -H "Authorization: token %GITHUB_TOKEN%" ^
              -H "Content-Type: application/octet-stream" ^
              --data-binary @%%f ^
              https://uploads.github.com/repos/%GITHUB_REPOSITORY%/releases/$(jq -r .id release.json)/assets?name=%%~nxf
          )
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
